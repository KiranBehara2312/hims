const SQL1 = {
  GET_USER_BY_USER_ID: `SELECT * FROM ORG_USR_DETAILS WHERE userId = ?;`,
  GET_USERS_LIST: `SELECT userId, orgId, firstName, middleName, lastName, fullName, userPhone, roleId, userAadhar, isActive, isBlocked, isLocked, incorrectPwdAttempts FROM ORG_USR_DETAILS WHERE isActive = '1'`,
  GET_COUNTRY_DATA: `SELECT *, countryId as id, countryName as name FROM GBL_CTRY_DETAILS WHERE isActive = '1'`,
  GET_ALL_STATE_DATA: `SELECT *, stateId as id, stateName as name FROM GBL_STAT_DETAILS WHERE isActive = '1'`,
  GET_ROLE_DATA_BY_ROLE_ID: `SELECT * FROM GBL_USR_ROLES WHERE roleId = ?;`,
  GET_USER_BY_USER_PHONE: `SELECT * FROM ORG_USR_DETAILS WHERE userPhone = ?;`,
  UPDATE_INCORRECT_PWD_ATTEMPTS: `UPDATE ORG_USR_DETAILS SET incorrectPwdAttempts = incorrectPwdAttempts + 1 WHERE userId = ?;`,
  LOCK_USER: `UPDATE ORG_USR_DETAILS SET isLocked = 1 WHERE userId = ?;`,
  UNLOCK_USER: `UPDATE ORG_USR_DETAILS SET isLocked = 0, incorrectPwdAttempts = 0 WHERE userId = ?;`,
  CREATE_UPDATE_USER_PROC:
    "CALL CREATE_UPDATE_USER_PROC(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?);",
  CREATE_UPDATE_DOC_PROC: `CALL UPSERT_DOC_PROC(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);`,
  GET_ALL_ACTIVE_DOCTORS: `SELECT * FROM ORG_DOC_DETAILS WHERE isActive = 1 `,
  GET_PARENT_SIDENAV_MENU: `SELECT * FROM ORG_SNV_PRT_ITEMS WHERE isActive = '1';`,
  GET_CHILD_SIDENAV_MENU: `SELECT * FROM ORG_SNV_CHL_ITEMS where parentId = ? AND isActive = '1';`,
  GET_ORG_DETAILS: `SELECT * FROM GBL_ORG_DETAILS`,
  GET_GENDER_DATA: `SELECT genderId as id, genderName as name FROM GBL_GND_DETAILS WHERE isActive = '1'`,
  GET_MARITAL_STATUS: `SELECT maritalId as id, maritalName as name FROM GBL_MRTL_STATUS WHERE isActive = '1'`,
  GET_SALUTATION_DATA: `SELECT salutationId as id, salutationName as name FROM GBL_SAL_DETAILS WHERE isActive = '1'`,
  GET_ROLES_DATA: `SELECT roleId as id, roleName as name, rolePrefix, colorTheme as color, iconName FROM GBL_USR_ROLES WHERE isActive = '1'`,
  GET_BLOOD_GRP_DATA: `SELECT bloodGroupId as id, bloodGroupName as name, shortName  FROM GBL_BLD_GROUPS WHERE isActive = '1'`,
  GET_DOC_DESIGNATION: `SELECT designationId as id, designationName as name FROM GBL_DOC_DESIGNATIONS WHERE isActive = '1'`,
  GET_DOC_DEPTS: `SELECT departmentId as id, departmentName as name FROM GBL_DOC_DEPTS WHERE isActive = '1'`,
  GET_APPT_STATUS_DATA: `SELECT apptStatusId,apptStatusName,color FROM GBL_APPT_STATUS WHERE isActive = '1'`,
  GET_DOCTOR_QUALIFICATION_DATA: `SELECT qualificationId as id,shortName as name, qualificationName as fullForm FROM GBL_DOCTOR_QLFCN WHERE isActive = '1'`,
  GET_ORG_SHIFTS: `SELECT shiftId as id ,shiftName as name, shiftTimeStartAt, shiftTimeEndAt FROM GBL_ORG_SHIFTS WHERE isActive = '1'`,
  GET_PATIENT_TYPES: `SELECT patientTypeId as id ,patientTypeName as name, shortName FROM GBL_ORG_PATTYPES WHERE isActive = '1'`,
  GET_PATIENT_CAT_LIST: `SELECT patientCategoryId as id ,patientCategoryName as name, shortName FROM GBL_ORG_PAT_CAT WHERE isActive = '1'`,
  GET_PAYMENT_TYPE: `SELECT paymentTypeId as id ,paymentTypeName as name, shortName FROM GBL_PAYMENT_TYPE WHERE isActive = '1'`,
  GET_DISABILITY_STATUS: `SELECT disabilityId as id ,disabilityName as name, disabilityDescription FROM GBL_DIS_DETAILS WHERE isActive = '1'`,
  GBL_NOT_PRIORITY: `SELECT priorityId as id, priorityName as name FROM GBL_NOT_PRIORITY WHERE isActive = '1'`,
  CREATE_UPDATE_NOTIFICATION_PROC: `CALL UPSERT_NTF_HISTORY_PROC(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,
  GET_ALL_NOTIFICATIONS_BY_USER: `SELECT * FROM USR_NTF_HISTORY WHERE ntfTaggedUserId IS NULL OR ntfTaggedUserId = '' OR ntfTaggedUserId = ? `,
  GET_ALL_NOTIFICATIONS_BY_ADMIN: `SELECT * FROM USR_NTF_HISTORY `,
};

module.exports = SQL1;
